<?phpsession_start();ini_set('display_errors', 1);Class Action {	private $db;	public function __construct() {		ob_start();   	include 'db_connect.php';    include 'date/jdf.php';    $this->db = $conn;	}	function __destruct() {	    $this->db->close();	    ob_end_flush();	}	function login(){//        $cookie_time = 14;        $_SESSION["cookie_time"] = 1440 ;        $_SESSION["time_session"] = time() ;//        setcookie("panel", session_id(), time() + $cookie_time, "/");		extract($_POST);            $check = $this->db->query("SELECT status  FROM users where username = '".$username."' and password ='".$password."';");            if ($check->fetch_array()["status"] != "active")                return 3;			$qry = $this->db->query("SELECT *,concat(firstname,' ',lastname) as name FROM users where username = '".$username."' and password ='".$password."';");		if($qry->num_rows > 0){			foreach ($qry->fetch_array() as $key => $value) {				if($key != 'password' && !is_numeric($key))					$_SESSION['login_'.$key] = $value;			}				return 1;		}else{			return 2;		}	}	function logout(){		session_destroy();		foreach ($_SESSION as $key => $value) {			unset($_SESSION[$key]);		}		header("location:login.php");	}	function login2(){		extract($_POST);			$qry = $this->db->query("SELECT *,concat(lastname,', ',firstname,' ',middlename) as name FROM students where student_code = '".$student_code."' ");		if($qry->num_rows > 0){			foreach ($qry->fetch_array() as $key => $value) {				if($key != 'password' && !is_numeric($key))					$_SESSION['rs_'.$key] = $value;			}				return 1;		}else{			return 3;		}	}	function save_user(){		extract($_POST);		$data = "";		foreach($_POST as $k => $v){            if (is_null($v))                exit();			if(!in_array($k, array('id','cpass')) && !is_numeric($k)){				if(empty($data)){					$data .= " $k='$v' ";				}else{					$data .= ", $k='$v' ";				}			}		}        if(isset($group_id)){            if ($group_id == '' || $group_id == 0){                echo 'گروه کاربری نمی تواند خالی باشد .';                exit;            }        }//		if(!empty($password)){//					$data .= ", password=md5('$password') ";////		}		$check = $this->db->query("SELECT * FROM users where username ='$username' ".(!empty($id) ? " and id != {$id} " : ''))->num_rows;		if($check > 0){			echo '.نام کاربری قبلا ثبت شده است';			exit;		}		if(isset($_FILES['img']) && $_FILES['img']['tmp_name'] != ''){			$fname = strtotime(date('y-m-d H:i')).'_'.$_FILES['img']['name'];            $target_file =  explode(".",$_FILES["img"]["name"]);            if($target_file[1] != "jpg" && $target_file[1] != "png" && $target_file[1] != "jpeg" && $target_file[1] != "jfif") {                return 7;            }            if ($_FILES["img"]["size"] > 500000) {                return 6;            }			$move = move_uploaded_file($_FILES['img']['tmp_name'],'assets/uploads/'. $fname);			$data .= ", avatar = '$fname' ";		}		if(empty($id)){			$save = $this->db->query("INSERT INTO users set $data");		}else{			$save = $this->db->query("UPDATE users set $data where id = $id");		}		if($save){			return 1;		}	}	function signup(){		extract($_POST);		$data = "";		foreach($_POST as $k => $v){			if(!in_array($k, array('id','cpass')) && !is_numeric($k)){				if($k =='password'){					if(empty($v))						continue;					$v = md5($v);				}				if(empty($data)){					$data .= " $k='$v' ";				}else{					$data .= ", $k='$v' ";				}			}		}		$check = $this->db->query("SELECT * FROM users where email ='$username' ".(!empty($id) ? " and id != {$id} " : ''))->num_rows;		if($check > 0){			return 2;			exit;		}		if(isset($_FILES['img']) && $_FILES['img']['tmp_name'] != ''){			$fname = strtotime(date('y-m-d H:i')).'_'.$_FILES['img']['name'];			$move = move_uploaded_file($_FILES['img']['tmp_name'],'assets/uploads/'. $fname);			$data .= ", avatar = '$fname' ";		}		if(empty($id)){			$save = $this->db->query("INSERT INTO users set $data");		}else{			$save = $this->db->query("UPDATE users set $data where id = $id");		}		if($save){			if(empty($id))				$id = $this->db->insert_id;			foreach ($_POST as $key => $value) {				if(!in_array($key, array('id','cpass','password')) && !is_numeric($key))					$_SESSION['login_'.$key] = $value;			}					$_SESSION['login_id'] = $id;				if(isset($_FILES['img']) && !empty($_FILES['img']['tmp_name']))					$_SESSION['login_avatar'] = $fname;			return 1;		}	}	function update_user(){		extract($_POST);		$data = "";		foreach($_POST as $k => $v){			if(!in_array($k, array('id','cpass','table','password')) && !is_numeric($k)){								if(empty($data)){					$data .= " $k='$v' ";				}else{					$data .= ", $k='$v' ";				}			}		}		$check = $this->db->query("SELECT * FROM users where email ='$username' ".(!empty($id) ? " and id != {$id} " : ''))->num_rows;		if($check > 0){			return 2;			exit;		}		if(isset($_FILES['img']) && $_FILES['img']['tmp_name'] != ''){			$fname = strtotime(date('y-m-d H:i')).'_'.$_FILES['img']['name'];			$move = move_uploaded_file($_FILES['img']['tmp_name'],'assets/uploads/'. $fname);			$data .= ", avatar = '$fname' ";		}		if(!empty($password))			$data .= " ,password=md5('$password') ";		if(empty($id)){			$save = $this->db->query("INSERT INTO users set $data");		}else{			$save = $this->db->query("UPDATE users set $data where id = $id");		}		if($save){			foreach ($_POST as $key => $value) {				if($key != 'password' && !is_numeric($key))					$_SESSION['login_'.$key] = $value;			}			if(isset($_FILES['img']) && !empty($_FILES['img']['tmp_name']))					$_SESSION['login_avatar'] = $fname;			return 1;		}	}	function delete_user(){		extract($_POST);		$delete = $this->db->query("DELETE FROM users where id = ".$id);		if($delete)			return 1;	}    function change_active_user(){        extract($_POST);        if ($val == 0) $val = "active"; else $val = "inactive";        $changed = $this->db->query("UPDATE users set status = '".$val."' where id = ".$id);        if($changed)            return 1;    }	function save_system_settings(){		extract($_POST);		$data = '';		foreach($_POST as $k => $v){			if(!is_numeric($k)){				if(empty($data)){					$data .= " $k='$v' ";				}else{					$data .= ", $k='$v' ";				}			}		}		if($_FILES['cover']['tmp_name'] != ''){			$fname = strtotime(date('y-m-d H:i')).'_'.$_FILES['cover']['name'];			$move = move_uploaded_file($_FILES['cover']['tmp_name'],'../assets/uploads/'. $fname);			$data .= ", cover_img = '$fname' ";		}		$chk = $this->db->query("SELECT * FROM system_settings");		if($chk->num_rows > 0){			$save = $this->db->query("UPDATE system_settings set $data where id =".$chk->fetch_array()['id']);		}else{			$save = $this->db->query("INSERT INTO system_settings set $data");		}		if($save){			foreach($_POST as $k => $v){				if(!is_numeric($k)){					$_SESSION['system'][$k] = $v;				}			}			if($_FILES['cover']['tmp_name'] != ''){				$_SESSION['system']['cover_img'] = $fname;			}			return 1;		}	}	function save_image(){		extract($_FILES['file']);		if(!empty($tmp_name)){			$fname = strtotime(date("Y-m-d H:i"))."_".(str_replace(" ","-",$name));			$move = move_uploaded_file($tmp_name,'assets/uploads/'. $fname);			$protocol = strtolower(substr($_SERVER["SERVER_PROTOCOL"],0,5))=='https'?'https':'http';			$hostName = $_SERVER['HTTP_HOST'];			$path =explode('/',$_SERVER['PHP_SELF']);			$currentPath = '/'.$path[1]; 			if($move){				return $protocol.'://'.$hostName.$currentPath.'/assets/uploads/'.$fname;			}		}	}	function save_document(){		extract($_POST);		$data = "";		foreach($_POST as $k => $v){			if(!in_array($k, array('id','radio1','radio2','radio3','category_doc')) && !is_numeric($k)){				if($k == 'description')					$v = htmlentities(str_replace("'","&#x2019;",$v));				if(empty($data)){					$data .= " $k='$v' ";				}else{					$data .= ", $k='$v' ";				}			}		}        if (!$status_doc){            return " وضعیت انتخاب نشده است ";        }        if (empty($id) && !$serial_id){            return " شماره سند را وارد کنید ";        }        if (!$start_date){            return " تاریخ سند را وارد کنید ";        }        if (!$subject_doc){            return " موضوع سند را مشخص کنید ";        }//        if (!$img){//            return "سند ثبت نشده است";//        }        if ($_SESSION["login_group_id"] == 9 && (isset($radio2) || isset($radio3)) && !$category_doc){            return " گروه سند را مشخص کنید ";        } else if ($_SESSION["login_group_id"] != 9 && !$category_doc  ){                return " گروه سند را مشخص کنید ";        }		if(isset($radio1)){			$data .= ", group_doc= 1 ";		}elseif (isset($radio2)){            $data .= ", group_doc= 2 ";            $data .= ", category_doc= $category_doc ";        }elseif (isset($radio3)){            $data .= ", group_doc= 3 ";            $data .= ", category_doc= $category_doc ";        }else{            $data .= ", category_doc= $category_doc ";        }        $data .=", user_id_created='".$_SESSION["login_id"]."'";        $data .=", user_group_id='".$_SESSION["login_group_id"]."'";        if(!empty($_FILES["img"]["name"])) {            $save = $this->upload_files();            $data .=", file_doc_id='$save'";        }else if (empty($id)){            echo 'لطفاً یک فایل تصویری را برای آپلود انتخاب کنید .';            exit;        }        // echo $data;exit;		if(empty($id)){			$save = $this->db->query("INSERT INTO documents set $data");		}else{			$save = $this->db->query("UPDATE documents set $data where document_id = ".$id);		}		if($save){			return 1;		}	}    function save_ticket(){		extract($_POST);		$data = "";		foreach($_POST as $k => $v){			if($k != 'id'&& $k != 'assign_to' && !is_numeric($k)){				if($k == 'description')					$v = htmlentities(str_replace("'","&#x2019;",$v));				if(empty($data)){					$data .= " $k='$v' ";				}else{					$data .= ", $k='$v' ";				}			}		}        if (!$status_ticket){            return " وضعیت انتخاب نشده است ";        }        if (empty($id) && !$serial_id){            return " شماره تیکت را وارد کنید ";        }        if (!$start_date){            return " تاریخ سند را وارد کنید ";        }        if (!$subject_ticket){            return " موضوع سند را مشخص کنید ";        }        if (!$assign_to){            return " به کدام شخص اختصاص داده شود ";        }        if (!$problem_ticket){            return " مشکل خودتان را مشخص کنید. ";        }        $now = new DateTime();        $timestamp = $now->getTimestamp();        $unique = jdate("Y-m-d H:i:s", $timestamp);        if ($_SESSION["login_id"]){            if (empty($id)){                $data .=", user_id_created='".$_SESSION["login_id"]."'";                $data .=", user_group_id='".$_SESSION["login_group_id"]."'";                $data .=", date_created='".$unique."'";            }else{                $data .=", user_id_corrector='".$_SESSION["login_id"]."'";                $data .=", user_group_id='".$_SESSION["login_group_id"]."'";                $data .=", date_corrector='".$unique."'";            }        }        if(!empty($_FILES["img"]["name"])) {            $save = $this->upload_files();            $data .=", file_ticket_id='$save'";        }        // echo $data;exit;        if ($assign_to){            if ($_SESSION['login_type'] == 0 || $_SESSION['login_type'] == 1 ){                $groups = $this->db->query("SELECT DISTINCT id as n FROM users  where username = '".$assign_to."' ;");                $row = $groups->fetch_assoc();                $data .=", assign_to_client='".$row['n']."'";                $data .=", assign_to=".'null';            }else{                $groups = $this->db->query("SELECT DISTINCT ticket.ticket_group_id as n FROM ticket_group as ticket where  ticket_group_name = '".$assign_to."';");                $row = $groups->fetch_assoc();                $data .=", assign_to='".$row['n']."'";                $data .=", assign_to_client=".'null';            }        }		if(empty($id)){			$save = $this->db->query("INSERT INTO ticket set $data");		}else{			$save = $this->db->query("UPDATE ticket set $data where ticket_id = ".$id);		}		if($save){			return 1;		}	}    function upload_files (){        $filename = $_FILES['img']['name'];        $tmpname = $_FILES['img']['tmp_name'];        $file_size = $_FILES['img']['size'];        $file_type = $_FILES['img']['type'];        $ext = pathinfo($filename, PATHINFO_EXTENSION);        $fp      = fopen($tmpname, 'r');        $content = fread($fp, filesize($tmpname));        $content = addslashes($content);        fclose($fp);        if($ext=="png"||$ext=="PNG"||$ext=="JPG"||$ext=="jpg"||$ext=="jpeg"||$ext=="JPEG"            ||$ext=="pdf"||$ext=="PDF"||$ext=="doc"||$ext=="DOC"||$ext=="docx"||$ext=="DOCX"            ||$ext=="XLS"||$ext=="txt"||$ext=="xls" || $ext=="zip" || $ext=="rar" ||$ext=="XLSX"||$ext=="xlsx"||$ext=="xlsm"||$ext=="XLSM")        {//            $save = mysqli_query($this->db,"INSERT INTO tbl_uploads(filename,filetype,size,data) VALUES('$filename','$file_type','". $this->filesize_formatted($file_size) ."',''".mysqli_escape_string($this->db, file_get_contents($_FILES['img']['tmp_name']))."'')");            $sql = "insert into tbl_uploads(filename,filetype,size,data) values('".$filename."', '".$file_type."', '". $this->filesize_formatted($file_size) ."', '".$content."')";            $result = mysqli_query($this->db, $sql) or die(mysqli_error($this->db));            $save_id =  mysqli_insert_id($this->db);            if ($result)            {                return $save_id ;            }            else            {                echo 'مشکل در ذخیره سازی فایل .';                exit;            }        }else{            echo 'لطفا فایلی با پسوند مناسب انتخاب کنید .';            exit;        }    }	function delete_document(){		extract($_POST);		$delete = $this->db->query("DELETE FROM documents where document_id = $id");		if($delete){			return 1;		}	}    function delete_ticket(){		extract($_POST);		$delete = $this->db->query("DELETE FROM ticket where ticket_id = $id");		if($delete){			return 1;		}	}////	function get_report(){//		extract($_POST);//		$data = array();//		$get = $this->db->query("SELECT t.*,p.name as ticket_for FROM ticket_list t inner join pricing p on p.id = t.pricing_id where date(t.date_created) between '$date_from' and '$date_to' order by unix_timestamp(t.date_created) desc ");//		while($row= $get->fetch_assoc()){//			$row['date_created'] = date("M d, Y",strtotime($row['date_created']));//			$row['name'] = ucwords($row['name']);//			$row['adult_price'] = number_format($row['adult_price'],2);//			$row['child_price'] = number_format($row['child_price'],2);//			$row['amount'] = number_format($row['amount'],2);//			$data[]=$row;//		}//		return json_encode($data);////	}    function filesize_formatted($size) {        $units = array( 'B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB');        $power = $size > 0 ? floor(log($size, 1024)) : 0;        return number_format($size / pow(1024, $power), 2, '.', ',') . ' ' . $units[$power];    }}